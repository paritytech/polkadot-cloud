name: Publish

on:
  push:
    branches: [main]

jobs:
  npm-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.5.0
      - run: yarn install
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org
      - name: Build NPM Packages
        run: yarn build
      - name: New 'core-ui' version
        id: core_ui_version
        uses: PostHog/check-package-version@v2
        with:
          path: "./packages/core-ui/dist"
      - name: New 'react-odometer' version
        id: react_odometer_version
        uses: PostHog/check-package-version@v2
        with:
          path: "./packages/react-odometer/dist"
      - name: New 'utils' version
        id: utils_version
        uses: PostHog/check-package-version@v2
        with:
          path: "./packages/utils/dist"
      - name: New 'themes' version
        id: themes_version
        uses: PostHog/check-package-version@v2
        with:
          path: "./packages/themes"
      - name: New 'community' version
        id: community_version
        uses: PostHog/check-package-version@v2
        with:
          path: "./packages/community"

      - name: Publish 'core-ui' Dry Run
        run: npm publish --unsafe-perm --dry-run
        working-directory: "./packages/core-ui/dist"
      - name: Publish 'core-ui'
        if: steps.core_ui_version.outputs.is-new-version == 'true'
        working-directory: "./packages/core-ui/dist"
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish 'react-odometer' Dry Run
        run: npm publish --unsafe-perm --dry-run
        working-directory: "./packages/react-odometer/dist"
      - name: Publish 'react-odometer'
        if: steps.react_odometer_version.outputs.is-new-version == 'true'
        run: npm publish
        working-directory: "./packages/react-odometer/dist"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish 'utils' Dry Run
        run: npm publish --unsafe-perm --dry-run
        working-directory: "./packages/utils/dist"
      - name: Publish 'utils'
        if: steps.utils_version.outputs.is-new-version == 'true'
        run: npm publish
        working-directory: "./packages/utils/dist"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish 'themes' Dry Run
        run: npm publish --unsafe-perm --dry-run
        working-directory: "./packages/themes"
      - name: Publish 'themes'
        if: steps.themes_version.outputs.is-new-version == 'true'
        run: npm publish
        working-directory: "./packages/themes"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish 'community' Dry Run
        run: npm publish --unsafe-perm --dry-run
        working-directory: "./packages/community"
      - name: Publish 'community'
        if: steps.community_version.outputs.is-new-version == 'true'
        run: npm publish
        working-directory: "./packages/community"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  all:
    # This dummy job depends on all the mandatory checks. It succeeds if and only if all CI checks
    # are successful.
    needs: [npm-publish]
    runs-on: ubuntu-latest
    steps:
      - run: echo Success
